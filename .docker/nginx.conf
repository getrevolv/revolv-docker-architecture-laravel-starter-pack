worker_processes 4;
pid /tmp/nginx.pid;

events {
  worker_connections 2048;
  multi_accept on;
  use epoll;
}

http {
  server_tokens off;
  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;

  # Needs to be greater than AWS ELB timeout
  keepalive_timeout 68;
  types_hash_max_size 2048;

  include /etc/nginx/mime.types;
  include /etc/nginx/conf.d/upstream.conf;

  default_type application/octet-stream;

  access_log off;
  error_log off;

  gzip on;
  gzip_disable "msie6";
  open_file_cache max=100;

  client_body_temp_path /tmp/client 1 2;
  client_body_buffer_size 256k;
  client_body_in_file_only off;

  fastcgi_temp_path /tmp/fastcgi;
  proxy_temp_path /tmp/proxy;
  scgi_temp_path /tmp/scgi;
  uwsgi_temp_path /tmp/uwsgi;

  server {
    listen 9000 default_server;
    root /laravel/public;

    location / {
      # try to serve file directly, fallback to index.php
      try_files $uri /index.php$is_args$args;
    }

    # optionally disable falling back to PHP script for the asset directories;
    # nginx will return a 404 error when files are not found instead of passing the
    # request to laravel (improves performance but laravel's 404 page is not displayed)
    # location /bundles {
    #     try_files $uri =404;
    # }

    location ~ ^/index\.php(/|$) {
      fastcgi_pass php-upstream;
      fastcgi_split_path_info ^(.+\.php)(/.*)$;
      include fastcgi_params;
      
      # When you are using symlinks to link the document root to the
      # current version of your application, you should pass the real
      # application path instead of the path to the symlink to PHP
      # FPM.
      # Otherwise, PHP's OPcache may not properly detect changes to
      # your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126
      # for more information).
      fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
      fastcgi_param DOCUMENT_ROOT $realpath_root;
      # Prevents URIs that include the front controller. This will 404:
      # http://domain.tld/index.php/some-path
      # Remove the internal directive to allow URIs like this
      internal;
    }

    # return 404 for all other php files not matching the front controller
    # this prevents access to other php files you don't want to be accessible.
    location ~ \.php$ {
      return 404;
    }

    error_log /var/log/nginx/error.log;
    access_log /var/log/nginx/access.log;
  }
}

daemon off;
